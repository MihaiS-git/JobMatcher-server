spring.application.name=server
server.port=8080

# PostgreSQL database configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=30000

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false
spring.jpa.efer-datasource-initialization=true

# Log configuration
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer=ERROR
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.tool.hbm2ddl=INFO
logging.level.root=INFO
logging.level.com.zaxxer.hikari=INFO
logging.level.com.jobmatcher.server=INFO

# Spring DevTools
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

# Spring Security default user credentials
spring.security.user.name=${SPRING_SECURITY_USER_NAME}
spring.security.user.password=${SPRING_SECURITY_USER_PASSWORD}

# JWT configuration
jwt.secret=${JWT_SECRET}
jwt.expiration.time=900000
jwt.refresh.token.expiration=7

# OAuth2 configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE}
spring.security.oauth2.client.provider.google.authorization-uri=${GOOGLE_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.google.token-uri=${GOOGLE_TOKEN_URI}
spring.security.oauth2.client.provider.google.user-info-uri=${GOOGLE_USER_INFO_URI}
spring.security.oauth2.client.provider.google.user-name-attribute=${GOOGLE_USERNAME_ATTRIBUTE}

# Gmail
google.client.id=${GOOGLE_CLIENT_ID}
google.client.secret=${GOOGLE_CLIENT_SECRET}
google.refresh.token=${GOOGLE_REFRESH_TOKEN}
gmail.send.max-retries=3

# Front end
frontend.url.prod=${FRONTEND_URL_PROD}
frontend.url.dev=${FRONTEND_URL_DEV}
frontend.url.built=${FRONTEND_URL_BUILT}

frontend.base.url=${FRONTEND_URL_PROD}

# Cloudinary
cloudinary.cloud_name=${CLOUD_NAME}
cloudinary.api_key=${API_KEY}
cloudinary.api_secret=${API_SECRET}

# Max file upload size
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB